// Code generated by entc, DO NOT EDIT.

package steprun

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the steprun type in the database.
	Label = "step_run"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldStartedAt holds the string denoting the startedat field in the database.
	FieldStartedAt = "started_at"
	// FieldEndedAt holds the string denoting the endedat field in the database.
	FieldEndedAt = "ended_at"
	// FieldParticipantsCount holds the string denoting the participantscount field in the database.
	FieldParticipantsCount = "participants_count"
	// FieldHitID holds the string denoting the hitid field in the database.
	FieldHitID = "hit_id"

	// EdgeStep holds the string denoting the step edge name in mutations.
	EdgeStep = "step"
	// EdgeRun holds the string denoting the run edge name in mutations.
	EdgeRun = "run"

	// Table holds the table name of the steprun in the database.
	Table = "step_runs"
	// StepTable is the table the holds the step relation/edge.
	StepTable = "steps"
	// StepInverseTable is the table name for the Step entity.
	// It exists in this package in order to avoid circular dependency with the "step" package.
	StepInverseTable = "steps"
	// StepColumn is the table column denoting the step relation/edge.
	StepColumn = "step_run_step"
	// RunTable is the table the holds the run relation/edge.
	RunTable = "step_runs"
	// RunInverseTable is the table name for the Run entity.
	// It exists in this package in order to avoid circular dependency with the "run" package.
	RunInverseTable = "runs"
	// RunColumn is the table column denoting the run relation/edge.
	RunColumn = "run_steps"
)

// Columns holds all SQL columns for steprun fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldStatus,
	FieldStartedAt,
	FieldEndedAt,
	FieldParticipantsCount,
	FieldHitID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the StepRun type.
var ForeignKeys = []string{
	"run_steps",
}

var (
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the updated_at field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	UpdateDefaultUpdatedAt func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)

// Status defines the type for the status enum field.
type Status string

// Status values.
const (
	StatusCREATED    Status = "CREATED"
	StatusRUNNING    Status = "RUNNING"
	StatusPAUSED     Status = "PAUSED"
	StatusDONE       Status = "DONE"
	StatusTERMINATED Status = "TERMINATED"
	StatusFAILED     Status = "FAILED"
)

func (s Status) String() string {
	return string(s)
}

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s Status) error {
	switch s {
	case StatusCREATED, StatusRUNNING, StatusPAUSED, StatusDONE, StatusTERMINATED, StatusFAILED:
		return nil
	default:
		return fmt.Errorf("steprun: invalid enum value for status field: %q", s)
	}
}

// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/empiricaly/recruitment/internal/ent/admin"
	"github.com/empiricaly/recruitment/internal/ent/project"
	"github.com/empiricaly/recruitment/internal/ent/run"
	"github.com/empiricaly/recruitment/internal/ent/schema"
	"github.com/empiricaly/recruitment/internal/ent/step"
	"github.com/empiricaly/recruitment/internal/ent/steprun"
	"github.com/empiricaly/recruitment/internal/ent/template"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	adminFields := schema.Admin{}.Fields()
	_ = adminFields
	// adminDescCreatedAt is the schema descriptor for createdAt field.
	adminDescCreatedAt := adminFields[1].Descriptor()
	// admin.DefaultCreatedAt holds the default value on creation for the createdAt field.
	admin.DefaultCreatedAt = adminDescCreatedAt.Default.(func() time.Time)
	// adminDescUpdatedAt is the schema descriptor for updatedAt field.
	adminDescUpdatedAt := adminFields[2].Descriptor()
	// admin.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	admin.DefaultUpdatedAt = adminDescUpdatedAt.Default.(func() time.Time)
	// admin.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	admin.UpdateDefaultUpdatedAt = adminDescUpdatedAt.UpdateDefault.(func() time.Time)
	projectFields := schema.Project{}.Fields()
	_ = projectFields
	// projectDescCreatedAt is the schema descriptor for createdAt field.
	projectDescCreatedAt := projectFields[1].Descriptor()
	// project.DefaultCreatedAt holds the default value on creation for the createdAt field.
	project.DefaultCreatedAt = projectDescCreatedAt.Default.(func() time.Time)
	// projectDescUpdatedAt is the schema descriptor for updatedAt field.
	projectDescUpdatedAt := projectFields[2].Descriptor()
	// project.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	project.DefaultUpdatedAt = projectDescUpdatedAt.Default.(func() time.Time)
	// project.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	project.UpdateDefaultUpdatedAt = projectDescUpdatedAt.UpdateDefault.(func() time.Time)
	runFields := schema.Run{}.Fields()
	_ = runFields
	// runDescCreatedAt is the schema descriptor for createdAt field.
	runDescCreatedAt := runFields[1].Descriptor()
	// run.DefaultCreatedAt holds the default value on creation for the createdAt field.
	run.DefaultCreatedAt = runDescCreatedAt.Default.(func() time.Time)
	// runDescUpdatedAt is the schema descriptor for updatedAt field.
	runDescUpdatedAt := runFields[2].Descriptor()
	// run.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	run.DefaultUpdatedAt = runDescUpdatedAt.Default.(func() time.Time)
	// run.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	run.UpdateDefaultUpdatedAt = runDescUpdatedAt.UpdateDefault.(func() time.Time)
	stepFields := schema.Step{}.Fields()
	_ = stepFields
	// stepDescCreatedAt is the schema descriptor for createdAt field.
	stepDescCreatedAt := stepFields[1].Descriptor()
	// step.DefaultCreatedAt holds the default value on creation for the createdAt field.
	step.DefaultCreatedAt = stepDescCreatedAt.Default.(func() time.Time)
	// stepDescUpdatedAt is the schema descriptor for updatedAt field.
	stepDescUpdatedAt := stepFields[2].Descriptor()
	// step.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	step.DefaultUpdatedAt = stepDescUpdatedAt.Default.(func() time.Time)
	// step.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	step.UpdateDefaultUpdatedAt = stepDescUpdatedAt.UpdateDefault.(func() time.Time)
	steprunFields := schema.StepRun{}.Fields()
	_ = steprunFields
	// steprunDescCreatedAt is the schema descriptor for createdAt field.
	steprunDescCreatedAt := steprunFields[1].Descriptor()
	// steprun.DefaultCreatedAt holds the default value on creation for the createdAt field.
	steprun.DefaultCreatedAt = steprunDescCreatedAt.Default.(func() time.Time)
	// steprunDescUpdatedAt is the schema descriptor for updatedAt field.
	steprunDescUpdatedAt := steprunFields[2].Descriptor()
	// steprun.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	steprun.DefaultUpdatedAt = steprunDescUpdatedAt.Default.(func() time.Time)
	// steprun.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	steprun.UpdateDefaultUpdatedAt = steprunDescUpdatedAt.UpdateDefault.(func() time.Time)
	templateFields := schema.Template{}.Fields()
	_ = templateFields
	// templateDescCreatedAt is the schema descriptor for createdAt field.
	templateDescCreatedAt := templateFields[1].Descriptor()
	// template.DefaultCreatedAt holds the default value on creation for the createdAt field.
	template.DefaultCreatedAt = templateDescCreatedAt.Default.(func() time.Time)
	// templateDescUpdatedAt is the schema descriptor for updatedAt field.
	templateDescUpdatedAt := templateFields[2].Descriptor()
	// template.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	template.DefaultUpdatedAt = templateDescUpdatedAt.Default.(func() time.Time)
	// template.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	template.UpdateDefaultUpdatedAt = templateDescUpdatedAt.UpdateDefault.(func() time.Time)
	// templateDescName is the schema descriptor for name field.
	templateDescName := templateFields[3].Descriptor()
	// template.NameValidator is a validator for the "name" field. It is called by the builders before save.
	template.NameValidator = func() func(string) error {
		validators := templateDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// templateDescParticipantCount is the schema descriptor for participantCount field.
	templateDescParticipantCount := templateFields[5].Descriptor()
	// template.DefaultParticipantCount holds the default value on creation for the participantCount field.
	template.DefaultParticipantCount = templateDescParticipantCount.Default.(int)
	// template.ParticipantCountValidator is a validator for the "participantCount" field. It is called by the builders before save.
	template.ParticipantCountValidator = templateDescParticipantCount.Validators[0].(func(int) error)
	// templateDescAdult is the schema descriptor for adult field.
	templateDescAdult := templateFields[8].Descriptor()
	// template.DefaultAdult holds the default value on creation for the adult field.
	template.DefaultAdult = templateDescAdult.Default.(bool)
}

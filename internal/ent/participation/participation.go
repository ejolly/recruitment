// Code generated by entc, DO NOT EDIT.

package participation

import (
	"time"
)

const (
	// Label holds the string label denoting the participation type in the database.
	Label = "participation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldMturkWorkerID holds the string denoting the mturkworkerid field in the database.
	FieldMturkWorkerID = "mturk_worker_id"
	// FieldMturkAssignmentID holds the string denoting the mturkassignmentid field in the database.
	FieldMturkAssignmentID = "mturk_assignment_id"
	// FieldMturkHitID holds the string denoting the mturkhitid field in the database.
	FieldMturkHitID = "mturk_hit_id"
	// FieldMturkAcceptedAt holds the string denoting the mturkacceptedat field in the database.
	FieldMturkAcceptedAt = "mturk_accepted_at"
	// FieldMturkSubmittedAt holds the string denoting the mturksubmittedat field in the database.
	FieldMturkSubmittedAt = "mturk_submitted_at"

	// EdgeStepRun holds the string denoting the steprun edge name in mutations.
	EdgeStepRun = "stepRun"
	// EdgeParticipant holds the string denoting the participant edge name in mutations.
	EdgeParticipant = "participant"

	// Table holds the table name of the participation in the database.
	Table = "participations"
	// StepRunTable is the table the holds the stepRun relation/edge.
	StepRunTable = "participations"
	// StepRunInverseTable is the table name for the StepRun entity.
	// It exists in this package in order to avoid circular dependency with the "steprun" package.
	StepRunInverseTable = "step_runs"
	// StepRunColumn is the table column denoting the stepRun relation/edge.
	StepRunColumn = "step_run_participations"
	// ParticipantTable is the table the holds the participant relation/edge.
	ParticipantTable = "participations"
	// ParticipantInverseTable is the table name for the Participant entity.
	// It exists in this package in order to avoid circular dependency with the "participant" package.
	ParticipantInverseTable = "participants"
	// ParticipantColumn is the table column denoting the participant relation/edge.
	ParticipantColumn = "participant_participations"
)

// Columns holds all SQL columns for participation fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldMturkWorkerID,
	FieldMturkAssignmentID,
	FieldMturkHitID,
	FieldMturkAcceptedAt,
	FieldMturkSubmittedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Participation type.
var ForeignKeys = []string{
	"participant_participations",
	"step_run_participations",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the updated_at field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	UpdateDefaultUpdatedAt func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
